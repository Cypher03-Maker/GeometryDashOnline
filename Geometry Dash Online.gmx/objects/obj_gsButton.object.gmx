<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_gsButtonBase</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// sprite animation speed
image_speed = 0;

// is the button down?
is_down = false;

// is the button up?
is_over = false;

// is this the current selected button?
is_selected = false;

// default text
str_text = "Button";

label_color = make_colour_hsv(138, 184, 45);

label_color_over = c_white;

label_color_down = c_black;

label_down_x_offset = 0;
label_down_y_offset = 4;

// button sprite - uses spr_button by default
button_sprite = spr_button;

// button width - if you set this to false, make sure you set a button_width and button_height
autoSize = true;

ScalePath = 0.4;
TextScale = 1;

paddingL = 35;
paddingR = 20;

button_width = paddingL + string_width(str_text) + paddingL;
button_height = paddingR + string_height(str_text) + paddingR;

button_left = floor(x - (button_width * ScalePath));
button_top = floor(y - (button_height * ScalePath));
button_right = floor(x + (button_width * ScalePath));
button_bottom = floor(y + (button_height * ScalePath));

// set a number to be part of a group controller
group_id = 1010;

scripts[ev_left_button] = noone;
scripts[ev_left_press] = noone;
scripts[ev_mouse_enter] = noone;
scripts[ev_mouse_leave] = noone;
scripts[ev_left_release] = noone;

alarm_set(0, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_gsButtonGroup) &gt; 0) {
    with(obj_gsButtonGroup) {
        event_user(0);
    }
}

alarm[0] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(point_in_rectangle(mouse_x, mouse_y, button_left, button_top, button_right, button_bottom)) {  
    if(!is_over) {
        if(scripts[ev_mouse_enter] != noone) {
            script_execute(scripts[ev_mouse_enter]);
        }
    }
    
    is_over = true;
} else {
    if(is_over) {
        if(scripts[ev_mouse_leave] != noone) {
            script_execute(scripts[ev_mouse_leave]);
        }
        
        ex_tween_play(TextScale_, TextScale, 1, 30, scr_ease_out_bounce, false)
        ex_tween_play(ScalePath_, ScalePath, 0.4, 30, scr_ease_out_bounce, false)
    }
    
    is_over = false;
}

/*if(is_down) {
    image_index = 2; 
} else if(is_over || is_selected &amp;&amp; !is_down) {
    image_index = 1;
} else {
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>is_down = false;

if(is_over) {
    image_index = 1;
    
    if(scripts[ev_left_release] != noone) {
        script_execute(scripts[ev_left_release]);
    }
    
    ex_tween_play(TextScale_, TextScale, 1, 0, scr_ease_linear, false)
    ex_tween_play(ScalePath_, ScalePath, 0.4, 0, scr_ease_linear, false)
    
} else {
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("fml!");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (is_over) {
    
    if(scripts[ev_left_press] != noone) {
        script_execute(scripts[ev_left_press]);
    }

    is_down = true;
    
    scr_scale_path9()
    ex_tween_play(TextScale_, TextScale, 1.25, 30, scr_ease_out_bounce, false)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(is_over) {
    if(scripts[ev_left_button] != noone) {
        script_execute(scripts[ev_left_button]);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = view_xview + (view_wview * 0.5) + 200
y = view_yview + (view_hview * 0.5) + 100

if(autoSize) {
    button_width = paddingL + string_width(str_text) + paddingL;
    button_height = paddingR + string_height(str_text) + paddingR;
}

   
button_left = floor(x - (button_width * ScalePath));
button_top = floor(y - (button_height * ScalePath));
button_right = floor(x + (button_width * ScalePath));
button_bottom = floor(y + (button_height * ScalePath));

gsui_draw_sprite_scale9(button_sprite, 0, button_left, button_top, button_right, button_bottom, c_white, 1);

draw_set_halign(fa_center);
draw_set_valign(fa_middle);

if(is_over) {
    if(is_down) {
        draw_text_transformed_colour(x, y, str_text, TextScale, TextScale, 0, label_color_down, label_color_down, label_color_down, label_color_down, 1);
    } else {
        draw_text_transformed_colour(x, y, str_text, TextScale, TextScale, 0, label_color_over, label_color_over, label_color_over, label_color_over, 1);
    }
} else {
    if(is_down) {
        draw_text_transformed_colour(x, y, str_text, TextScale, TextScale, 0, label_color_down, label_color_down, label_color_down, label_color_down, 1);
    } else {
        draw_text_transformed_colour(x, y, str_text, TextScale, TextScale, 0, label_color, label_color, label_color, label_color, 1);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
