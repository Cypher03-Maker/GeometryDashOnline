<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBtnCubes</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>obj_gsButtonBase</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// sprite animation speed
image_speed = 0;

// sprite index
image_xscale = 0.95;
image_yscale = 0.95;
ScaleIn = 1.15;
ScaleOut = 0.95;
ScaleInDraw = 1.15;
ScaleOutDraw = 0.95;
image_xscale_draw = 0.95;
image_yscale_draw = 0.95;
ButtonMode = 0;
AlphaDraw = 0;
Alpha = 0;
idVar = 0;

// is the button down?
is_down = false;

// is the button up?
is_over = false;

// is this the current selected button?
is_selected = false;

// default text
str_text = "Button";

ScaleX = 1;

cube_index = 0;
cube_extra_index = 0;
cube_extra_alpha = 0;
image_color_1 = c_white;
image_color_2 = c_white;

label_color = make_colour_hsv(138, 184, 45);

label_color_over = c_white;

label_color_down = c_black;

label_down_x_offset = 0;
label_down_y_offset = 4;

PosX = 0;
PosY = 0;

// set a number to be part of a group controller
group_id = 1;

CoordState = 1;

scripts[ev_left_button] = noone;
scripts[ev_left_press] = noone;
scripts[ev_mouse_enter] = noone;
scripts[ev_mouse_leave] = noone;
scripts[ev_left_release] = noone;

alarm_set(0, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_gsButtonGroup) &gt; 0) {
    with(obj_gsButtonGroup) {
        event_user(0);
    }
}

alarm[0] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ScaleVar01) {
    if(position_meeting(mouse_x, mouse_y, id)) {  
        if(!is_over and ScaleVar01) {
            if(scripts[ev_mouse_enter] != noone) {
                script_execute(scripts[ev_mouse_enter]);
            }
            
            if (device_mouse_check_button(0, mb_left)) {
                ex_tween_play(__image_xscale__, image_xscale, ScaleIn, 20, scr_ease_out_bounce, false)
                ex_tween_play(__image_yscale__, image_yscale, ScaleIn, 20, scr_ease_out_bounce, false)
                
                ex_tween_play(__image_xscale_draw__, image_xscale_draw, ScaleInDraw, 20, scr_ease_out_bounce, false)
                ex_tween_play(__image_yscale_draw__, image_yscale_draw, ScaleInDraw, 20, scr_ease_out_bounce, false)
            }
        }
        
        is_over = true;
    } else {
        if(is_over and ScaleVar01) {
            if(scripts[ev_mouse_leave] != noone) {
                script_execute(scripts[ev_mouse_leave]);
            }
            
            ex_tween_play(__image_xscale__, image_xscale, ScaleOut, 20, scr_ease_out_bounce, false)
            ex_tween_play(__image_yscale__, image_yscale, ScaleOut, 20, scr_ease_out_bounce, false)
            
            ex_tween_play(__image_xscale_draw__, image_xscale_draw, ScaleOutDraw, 20, scr_ease_out_bounce, false)
            ex_tween_play(__image_yscale_draw__, image_yscale_draw, ScaleOutDraw, 20, scr_ease_out_bounce, false)
        }
        
        is_over = false;
    }
    
    if(position_meeting(mouse_x, mouse_y, id)) {
        if (device_mouse_check_button_pressed(0, mb_left)) {
            
            if(is_over and ScaleVar01) {
                if(scripts[ev_left_press] != noone) {
                    script_execute(scripts[ev_left_press]);
                }
                
                is_down = true;
                ex_tween_play(__image_xscale__, image_xscale, ScaleIn, 20, scr_ease_out_bounce, false)
                ex_tween_play(__image_yscale__, image_yscale, ScaleIn, 20, scr_ease_out_bounce, false)
                
                ex_tween_play(__image_xscale_draw__, image_xscale_draw, ScaleInDraw, 20, scr_ease_out_bounce, false)
                ex_tween_play(__image_yscale_draw__, image_yscale_draw, ScaleInDraw, 20, scr_ease_out_bounce, false)
            }
        }
        else if (device_mouse_check_button_released(0, mb_left)) {
            is_down = false;
            
            if(is_over and ScaleVar01) {
                if(scripts[ev_left_release] != noone) {
                        script_execute(scripts[ev_left_release]);
                }
                
                ex_tween_play(__image_xscale__, image_xscale, ScaleOut, 0, scr_ease_linear, false)
                ex_tween_play(__image_yscale__, image_yscale, ScaleOut, 0, scr_ease_linear, false)
                
                ex_tween_play(__image_xscale_draw__, image_xscale_draw, ScaleOutDraw, 0, scr_ease_linear, false)
                ex_tween_play(__image_yscale_draw__, image_yscale_draw, ScaleOutDraw, 0, scr_ease_linear, false)
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>is_down = false;

/*if (ScaleVar01) {
    if(is_over) {
        if(scripts[ev_left_release] != noone) {
            script_execute(scripts[ev_left_release]);
        }
    }
    
    depth = -3
    ex_tween_play(__image_xscale__, image_xscale, 0.95, 0, scr_ease_linear, true)
    ex_tween_play(__image_yscale__, image_yscale, 0.95, 0, scr_ease_linear, true)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("fml!");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (ScaleVar01) {
    if(is_over) {
        if(scripts[ev_left_press] != noone) {
            script_execute(scripts[ev_left_press]);
        }
    
        is_down = true;
    }
    
    ex_tween_play(__image_xscale__, image_xscale, 1.15, 30, scr_ease_out_bounce, true)
    ex_tween_play(__image_yscale__, image_yscale, 1.15, 30, scr_ease_out_bounce, true)
    
    depth = -4
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(is_over) {
    if(scripts[ev_left_button] != noone) {
        script_execute(scripts[ev_left_button]);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(CoordState) {
    case 1:
    x = view_xview + (view_wview * PosX);
    y = view_yview + (view_hview * PosY);
    break;
    
    case 2:
    x = view_xview + (view_wview * 0.5) + PosX;
    y = view_yview + (view_hview * 0.5) + PosY;
    break;
    
    case 3:
    x = view_xview + PosX;
    y = view_yview + PosY;
    break;
    
    case 4:
    x = view_wview + PosX;
    y = view_yview + PosY;
    break;
    
    case 5:
    x = view_xview + PosX;
    y = view_hview + PosY;
    break;
    
    case 6:
    x = view_wview + PosX;
    y = view_hview + PosY;
    break;
    
    case 7:
    x = view_xview + (view_wview * 0.5) + PosX;
    y = view_hview + PosY;
    break;
    
    case 8:
    x = view_wview + PosX;
    y = view_yview + (view_hview * 0.5) + PosY;
    break;
    
    case 9:
    x = view_xview + (view_wview * 0.5) - (488) + PosX;
    y = view_yview + (view_hview * 0.5) + PosY;
    break;
}

//draw_sprite_ext(sprBtnCubes, 0, x, y, image_xscale, image_yscale, 0, image_blend, 1)

if (global.CubeNumber == cube_index) {
    draw_sprite_ext(sprBorderColor, image_index, x + 0.5, y + 0.5, 0.95, 0.95, 0, c_white, 1)
}

draw_sprite_ext(sprite_index, 0, x, y, image_xscale, image_yscale, 0, image_color_1, 0)

draw_sprite_ext(sprCubesCol02, cube_index, x, y, image_xscale_draw, image_yscale_draw, 0, image_blend, 1)
draw_sprite_ext(sprCubesCol01, cube_index, x, y, image_xscale_draw, image_yscale_draw, 0, make_color_rgb(170, 170, 170), 1)
draw_sprite_ext(sprCubesColExtra, cube_extra_index, x, y, image_xscale_draw, image_yscale_draw, 0, image_blend, cube_extra_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
