<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Armadillo
ArmadilloXState = 0;
ArmadilloYState = 0;
ArmadilloScaleXState = 1.74;
ArmadilloScaleYState = 1.74;
ArmadilloAngleState = 0;

ArmadilloXState02 = 0;
ArmadilloYState02 = 0;
ArmadilloScaleXState02 = 1.74;
ArmadilloScaleYState02 = 1.74;
ArmadilloAngleState02 = 0;

ArmadilloXState03 = 0;
ArmadilloYState03 = 0;
ArmadilloScaleXState03 = 1.74;
ArmadilloScaleYState03 = 1.74;
ArmadilloAngleState03 = 0;

ArmadilloXState04 = 0;
ArmadilloYState04 = 0;
ArmadilloScaleXState04 = 1.74;
ArmadilloScaleYState04 = 1.74;
ArmadilloAngleState04 = 0;

ArmadilloXState05 = 0;
ArmadilloYState05 = 0;
ArmadilloScaleXState05 = 1.74;
ArmadilloScaleYState05 = 1.74;
ArmadilloAngleState05 = 0;

ArmadilloXState06 = 0;
ArmadilloYState06 = 0;
ArmadilloScaleXState06 = 1.74;
ArmadilloScaleYState06 = 1.74;
ArmadilloAngleState06 = 0;

//Spider
SpiderXState = 0;
SpiderYState = 0;
SpiderScaleXState = 1.74;
SpiderScaleYState = 1.74;
SpiderAngleState = 0;

SpiderXState02 = 0;
SpiderYState02 = 0;
SpiderScaleXState02 = 1.74;
SpiderScaleYState02 = 1.74;
SpiderAngleState02 = 0;

SpiderXState03 = 0;
SpiderYState03 = 0;
SpiderScaleXState03 = 1.74;
SpiderScaleYState03 = 1.74;
SpiderAngleState03 = 0;

SpiderXState04 = 0;
SpiderYState04 = 0;
SpiderScaleXState04 = 1.74;
SpiderScaleYState04 = 1.74;
SpiderAngleState04 = 0;

SpiderXState05 = 0;
SpiderYState05 = 0;
SpiderScaleXState05 = 1.72;
SpiderScaleYState05 = 1.74;
SpiderAngleState05 = 15;

SpiderXState06 = 0;
SpiderYState06 = 0;
SpiderScaleXState06 = 1.74;
SpiderScaleYState06 = 1.74;
SpiderAngleState06 = -40;

//Smasher
SmasherXState = 0;
SmasherYState = 0;
SmasherScaleXState = 0.8;
SmasherScaleYState = 0.8;
SmasherAngleState = 0;

SmasherXState02 = 0;
SmasherYState02 = 0;
SmasherScaleXState02 = 0.8;
SmasherScaleYState02 = 0.8;
SmasherAngleState02 = 0;

SmasherXState03 = 0;
SmasherYState03 = 0;
SmasherScaleXState03 = 0.8
SmasherScaleYState03 = 0.8
SmasherAngleState03 = 0;

SmasherXState04 = 0;
SmasherYState04 = 0;
SmasherScaleXState04 = 0.8
SmasherScaleYState04 = 0.8
SmasherAngleState04 = 0;

SmasherXState05 = 0;
SmasherYState05 = 0;
SmasherScaleXState05 = 0.8
SmasherScaleYState05 = 0.8
SmasherAngleState05 = 0;

SpiderAnimState = "IDLE";

SpiderState = 0;

SpiderAnimDest = false;

ArmadilloAnimState = "IDLE";

animation = 0;
hmangle = 0;
armangle = 0;
ftangle = 0;
hmlength = 3

alarm[0] = 1
alarm[3] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(ArmadilloAnimState) {
    case "IDLE": // Idle Anim
    ArmadilloAngleState03 = 0;

    ArmadilloAngleState04 = 0;
    
    ex_tween_play(scr_ArmadilloYState, 8, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_ArmadilloXState02, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloYState02, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloAngleState02, -5, 0, 15, scr_ease_out_cubic, false)
    
    alarm[3] = 15
    break;
    
    case "RUN": // Run Anim
    ex_tween_play(scr_ArmadilloYState, 5, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_ArmadilloXState02, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloYState02, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloAngleState02, -5, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_ArmadilloXState03, -19, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloXState04, 13, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloXState05, -19, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloXState06, 19, 0, 15, scr_ease_out_cubic, false)
    
    alarm[3] = 15
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(ArmadilloAnimState) {
    case "IDLE": // Idle Anim
    ArmadilloAngleState03 = 0;

    ArmadilloAngleState04 = 0;
    
    ex_tween_play(scr_ArmadilloYState, 0, 8, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_ArmadilloXState02, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloYState02, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloAngleState02, 0, -5, 15, scr_ease_out_cubic, false)
    
    alarm[4] = 15
    break;
    
    case "RUN": // Run Anim
    ex_tween_play(scr_ArmadilloYState, 0, 5, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_ArmadilloXState02, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloYState02, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloAngleState02, 0, -5, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_ArmadilloXState03, 0, -19, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloXState04, 0, 13, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloXState05, 0, -19, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloXState06, 0, 19, 15, scr_ease_out_cubic, false)
    
    alarm[4] = 15
    break;
    
    case "JUMP": // Jump Anim
    ex_tween_play(scr_ArmadilloAngleState02, 0, 10, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloAngleState03, 0, 10, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloAngleState04, 0, 10, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloAngleState05, 0, -10, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_ArmadilloAngleState06, 0, -10, 15, scr_ease_out_cubic, false)
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(SpiderState) {
    case 0:
    SpiderXState = lerp(0, 0, 0.5);
    SpiderScaleXState = lerp(1.74, 1.74, 0.5);
    SpiderScaleYState = lerp(1.74, 1.74, 0.5);
    SpiderAngleState = lerp(0, 0, 0.5);
    
    SpiderXState02 = lerp(0, 0, 0.5);
    SpiderYState02 = lerp(0, 0, 0.5);
    SpiderScaleYState02 = lerp(1.74, 1.74, 0.5);
    SpiderAngleState02 = lerp(0, 0, 0.5);
    
    SpiderXState03 = lerp(0, 0, 0.5);
    SpiderYState03 = lerp(0, 0, 0.5);
    SpiderScaleXState03 = lerp(1.74, 1.74, 0.5);
    SpiderScaleYState03 = lerp(1.74, 1.74, 0.5);
    SpiderAngleState03 = lerp(0, 0, 0.5);
    
    SpiderXState04 = lerp(0, 0, 0.5);
    SpiderYState04 = lerp(0, 0, 0.5);
    SpiderScaleXState04 = lerp(1.74, 1.74, 0.5);
    SpiderScaleYState04 = lerp(1.74, 1.74, 0.5);
    SpiderAngleState04 = lerp(0, 0, 0.5);
    
    SpiderXState05 = lerp(0, 0, 0.5);
    SpiderYState05 = lerp(0, 0, 0.5);
    SpiderScaleXState05 = lerp(1.72, 1.72, 0.5);
    SpiderScaleYState05 = lerp(1.74, 1.74, 0.5);
    SpiderAngleState05 = lerp(15, 15, 0.5);
    
    SpiderXState06 = lerp(0, 0, 0.5);
    SpiderYState06 = lerp(0, 0, 0.5);
    SpiderScaleXState06 = lerp(1.74, 1.74, 0.5);
    SpiderScaleYState06 = lerp(1.74, 1.74, 0.5);
    SpiderAngleState06 = lerp(-40, -40, 0.5);
    break;
    
    case 2:
    if (SpiderXState02 = 13) {
        SpiderXState = lerp(10, 0, 0.5);
        SpiderYState = lerp(13, 0, 0.5);
        SpiderScaleXState = lerp(1.74, 1.74, 0.5);
        SpiderScaleYState = lerp(1.74, 1.74, 0.5);
        SpiderAngleState = lerp(-15, 0, 0.5);
        
        SpiderXState02 = lerp(13, 0, 0.5);
        SpiderYState02 = lerp(0, 0, 0.5);
        SpiderScaleYState02 = lerp(1.74, 1.74, 0.5);
        SpiderAngleState02 = lerp(-95, 0, 0.5);
        
        SpiderXState03 = lerp(10, 0, 0.5);
        SpiderYState03 = lerp(33, 0, 0.5);
        SpiderScaleXState03 = lerp(-1.74, 1.74, 0.5);
        SpiderScaleYState03 = lerp(1.74, 1.74, 0.5);
        SpiderAngleState03 = lerp(-95, 0, 0.5);
        
        SpiderXState04 = lerp(15, 0, 0.5);
        SpiderYState04 = lerp(18, 0, 0.5);
        SpiderScaleXState04 = lerp(-1.74, 1.74, 0.5);
        SpiderScaleYState04 = lerp(1.74, 1.74, 0.5);
        SpiderAngleState04 = lerp(-50, 0, 0.5);
        
        SpiderXState05 = lerp(30, 0, 0.5);
        SpiderYState05 = lerp(15, 0, 0.5);
        SpiderScaleXState05 = lerp(1.72, 1.72, 0.5);
        SpiderScaleYState05 = lerp(1.74, 1.74, 0.5);
        SpiderAngleState05 = lerp(-15, 0, 0.5);
        
        SpiderXState06 = lerp(8, 0, 0.5);
        SpiderYState06 = lerp(6, 0, 0.5);
        SpiderScaleXState06 = lerp(1.74, 1.74, 0.5);
        SpiderScaleYState06 = lerp(1.74, 1.74, 0.5);
        SpiderAngleState06 = lerp(-55, -40, 0.5);
    } else if (SpiderXState02 = 20) {
        SpiderXState = lerp(0, 0, 0.5);
        SpiderYState = lerp(20, 0, 0.5);
        SpiderScaleXState = lerp(1.74, 1.74, 0.5);
        SpiderScaleYState = lerp(1.74, 1.74, 0.5);
        SpiderAngleState = lerp(0, 0, 0.5);
        
        SpiderXState02 = lerp(20, 0, 0.5);
        SpiderYState02 = lerp(0, 0, 0.5);
        SpiderScaleYState02 = lerp(1.74, 1.74, 0.5);
        SpiderAngleState02 = lerp(-90, 0, 0.5);
        
        SpiderXState03 = lerp(0, 0, 0.5);
        SpiderYState03 = lerp(40, 0, 0.5);
        SpiderScaleXState03 = lerp(1.74, 1.74, 0.5);
        SpiderScaleYState03 = lerp(1.74, 1.74, 0.5);
        SpiderAngleState03 = lerp(-90, 0, 0.5);
        
        SpiderXState04 = lerp(30, 0, 0.5);
        SpiderYState04 = lerp(0, 0, 0.5);
        SpiderScaleXState04 = lerp(1.74, 1.74, 0.5);
        SpiderScaleYState04 = lerp(1.74, 1.74, 0.5);
        SpiderAngleState04 = lerp(0, 0, 0.5);
        
        SpiderXState05 = lerp(8, 0, 0.5);
        SpiderYState05 = lerp(15, 0, 0.5);
        SpiderScaleXState05 = lerp(1.72, 1.72, 0.5);
        SpiderScaleYState05 = lerp(1.74, 1.74, 0.5);
        SpiderAngleState05 = lerp(15, 0, 0.5);
        
        SpiderXState06 = lerp(30, 0, 0.5);
        SpiderYState06 = lerp(15, 0, 0.5);
        SpiderScaleXState06 = lerp(1.74, 1.74, 0.5);
        SpiderScaleYState06 = lerp(1.74, 1.74, 0.5);
        SpiderAngleState06 = lerp(-40, 0, 0.5);
    }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(SpiderAnimState) {
    case "IDLE": // Idle Anim
    ex_tween_play(scr_SpiderXState, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState, 8, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState, 0, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState02, -6, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState02, 6, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState02, 1.54, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState02, 15, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState03, 6, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState03, 6, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState03, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState03, 1.54, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState03, -15, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState04, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState04, 6, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState04, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState04, 1.54, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState04, 0, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState05, -6, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState05, 3, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState05, 1.62, 1.72, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState05, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState05, 15, 15, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState06, -6, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState06, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState06, 1.64, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState06, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState06, -42, -40, 15, scr_ease_out_cubic, false)
    
    alarm[0] = 15
    break;
    
    case "RUN": // Run Anim
    ex_tween_play(scr_SpiderYState, -5, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState, 0, -3, 15, scr_ease_out_cubic, false)

    ex_tween_play(scr_SpiderXState02, 40, 15, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState02, 0, 0, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState02, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState02, 0, -23, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState03, -40, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState03, -20, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState03, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState03, -13, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState04, -2, -5, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState04, 0, -8, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState04, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState04, 0, -15, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState05, 0, 0, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState05, 0, 0, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState05, 2.24, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState05, 10, 15, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState06, 0, 0, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState06, -3, -17, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState06, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState06, 2.24, 1.44, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState06, -50, -20, 15, scr_ease_out_cubic, false)
    
    alarm[0] = 15
    break;
    
    case "RUN_JUMP": // Dash Orb Anim &amp; Jump Anim
    ex_tween_play(scr_SpiderYState, 0, 0, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState, 0, -3, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState02, 0, -13, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState02, 0, -3, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState02, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState02, 35, 40, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState03, 0, 15, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState03, 0, -23, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState03, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState03, -35, -40, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState04, 0, -20, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState04, 0, -8, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState04, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState04, 13, 20, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState05, 0, 0, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState05, 0, -23, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState05, 1.72, 1.72, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState05, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState05, 45, 49, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState06, 0, -23, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState06, 0, -30, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState06, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState06, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState06, 16, 20, 15, scr_ease_out_cubic, false)
   
    alarm[0] = 15
    break;
    
    case "RUN_VAR": // Run Anim (Naruto Variant)
    ex_tween_play(scr_SpiderYState, 13, 20, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState02, 13, 20, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState02, 0, 0, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState02, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState02, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState02, -95, -90, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderYState03, 33, 40, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState03, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState03, -95, -90, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState04, 30, 15, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState04, 0, 18, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState04, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState04, 0, -50, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState05, 8, 30, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState05, 15, 8, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState05, 1.72, 1.72, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState05, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState05, -15, 15, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState06, 8, 30, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState06, 6, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState06, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState06, 1.52, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState06, -55, -40, 15, scr_ease_out_cubic, false)
    alarm[0] = 15
    break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(SpiderAnimState) {
    case "IDLE": // Idle Anim
    SpiderAngleState03 = 0;

    SpiderAngleState04 = 0;
    
    ex_tween_play(scr_SpiderXState, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState, 0, 8, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState, 0, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState02, 0, -6, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState02, 0, 6, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState02, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState02, 1.74, 1.54, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState02, 0, 15, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState03, 0, 6, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState03, 0, 6, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState03, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState03, 1.74, 1.54, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState03, 0, -15, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState04, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState04, 0, 6, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState04, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState04, 1.74, 1.54, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState04, 0, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState05, 0, -6, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState05, 0, 3, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState05, 1.72, 1.62, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState05, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState05, 15, 15, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState06, 0, -6, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState06, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState06, 1.74, 1.64, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState06, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState06, -40, -42, 15, scr_ease_out_cubic, false)
    
    alarm[1] = 15
    break;
    
    case "RUN": // Run Anim
    SpiderAngleState03 = 0;

    SpiderAngleState04 = -15;
    
    ex_tween_play(scr_SpiderYState, 0, -5, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState, -3, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState02, 15, 40, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState02, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState02, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState02, -23, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState03, 0, -40, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState03, 0, -20, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState03, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState03, 0, -13, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState04, -5, -2, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState04, -8, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState04, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState04, -15, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState05, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState05, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState05, 1.74, 2.24, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState05, 15, 10, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState06, 0, 0, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState06, -17, -3, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState06, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState06, 1.44, 2.24, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState06, -20, -50, 15, scr_ease_out_cubic, false)
    
    alarm[1] = 15
    break;
    
    case "RUN_JUMP": // Dash Orb Anim &amp; Jump Anim
    SpiderAngleState03 = -40;

    SpiderAngleState04 = 20;
    
    ex_tween_play(scr_SpiderYState, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState, -3, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState02, 0, -13, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState02, 0, -3, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState02, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState02, 40, 35, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState03, 0, 15, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState03, 0, -23, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState03, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState03, -40, -35, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState04, 0, -20, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState04, 0, -8, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState04, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState04, 20, 13, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState05, 0, 0, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState05, 0, -23, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState05, 1.72, 1.72, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState05, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState05, 49, 45, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState06, 0, -23, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState06, 0, -30, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState06, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState06, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState06, 20, 16, 15, scr_ease_out_cubic, false)
    
    alarm[1] = 15
    break;
    
    case "RUN_VAR": // Run Anim (Naruto Variant)
    SpiderAngleState03 = -90;

    SpiderAngleState04 = -50;
    
    ex_tween_play(scr_SpiderXState, 0, 10, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState, 20, 13, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState, 0, -15, 0, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState02, 20, 13, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState02, 0, 0, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState02, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState02, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState02, -90, -95, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState03, 0, 10, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState03, 40, 33, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState03, 1.74, -1.74, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState03, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState03, -90, -95, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState04, 15, 30, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState04, 18, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState04, 1.74, -1.74, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState04, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState04, -50, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState05, 30, 8, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState05, 8, 15, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState05, 1.72, 1.72, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState05, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState05, 15, -15, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState06, 30, 8, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState06, 0, 6, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState06, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState06, 1.74, 1.52, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState06, -40, -55, 15, scr_ease_out_cubic, false)
    alarm[1] = 15
    break;
    
    case "JUMP": // Jump Anim
    SpiderAngleState03 = -35;

    SpiderAngleState04 = 13;
    
    ex_tween_play(scr_SpiderYState, 0, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState, -3, 3, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState02, -13, -3, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState02, -3, 1, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState02, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState02, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState02, 35, -20, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState03, 15, -2, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState03, -33, 7, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState03, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState03, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState03, -35, 20, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState04, -20, 5, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState04, -8, -15, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState04, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState04, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState04, 13, -10, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState05, 0, 0, 0, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState05, -23, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState05, 1.72, 1.72, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState02, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState05, 45, 0, 15, scr_ease_out_cubic, false)
    
    ex_tween_play(scr_SpiderXState06, -23, 0, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderYState06, -30, -2, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleXState06, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderScaleYState02, 1.74, 1.74, 15, scr_ease_out_cubic, false)
    ex_tween_play(scr_SpiderAngleState06, 16, -55, 15, scr_ease_out_cubic, false)
    break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (keyboard_check(vk_left) || keyboard_check(vk_right)) {
    scr_spiderAnimRunPrev();
} else if (keyboard_check(vk_up)) {
    scr_spiderAnimJumpPrev();
} else {
    scr_spiderAnimIdlePrev();
}*/

/*if (keyboard_check(vk_left) || keyboard_check(vk_right)) {
    SpiderAnimState = "RUN_VAR"
} else if (keyboard_check(vk_up)) {
    SpiderAnimState = "RUN_JUMP"
} else {
    SpiderAnimState = "IDLE"
    if (SpiderAnimState = "RUN_VAR") {
        SpiderState = 2;
        alarm_set(2, 1)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (animation == 0)
    {
        hmangle += (0.09)
        armangle += (0.09)
        ftangle = lerp(ftangle, 0, 0.2)
        
        SmasherYState = (-2 + (sin(hmangle) * -4))
        SmasherAngleState = (sin(hmangle) * 1.1)
        
        SmasherYState02 = (-3 + ((cos(armangle) * 1.1) * 3))
        SmasherYState03 = (-3 + ((cos(armangle) * 1.1) * 3))
        
        SmasherXState04 = lerp(SmasherXState04, 0, 0.2)
        SmasherYState04 = lerp(SmasherYState04, 0, 0.2)
        
        SmasherXState05 = lerp(SmasherXState05, 0, 0.2)
        SmasherYState05 = lerp(SmasherYState05, 0, 0.2)
        
        //SmasherAngleState04 = lerp(SmasherAngleState04, 0, 0.2)
        //SmasherAngleState05 = lerp(SmasherAngleState05, 0, 0.2)
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pos_x = floor(view_wview*0.5);
var pos_y = floor(view_hview*0.5);

x = pos_x
y = pos_y - 167

switch(global.PageGameModeExt) {
    case 1:
    draw_sprite_ext(sprCubeGlow, global.CubeNumber, x, y, 1.74, 1.74, 0, global.Col03, 1)
    draw_sprite_ext(sprCubesCol02, global.CubeNumber, x, y, 1.74, 1.74, 0, global.Col02, 1)
    draw_sprite_ext(sprCubesCol01, global.CubeNumber, x, y, 1.74, 1.74, 0, global.Col01, 1)
    draw_sprite_ext(sprCubesColExtra, global.CubeExtraNumber, x, y, 1.74, 1.74, 0, c_white, global.CubeExtraAlpha)
    break;
    
    case 2:
    draw_sprite_ext(sprShipGlow, global.ShipNumber, x, y, 1.74, 1.74, 0, global.Col03, 1)
    draw_sprite_ext(sprShipCol02, global.ShipNumber, x, y, 1.74, 1.74, 0, global.Col02, 1)
    draw_sprite_ext(sprShipCol01, global.ShipNumber, x, y, 1.74, 1.74, 0, global.Col01, 1)
    draw_sprite_ext(sprShipColExtra, global.ShipExtraNumber, x, y, 1.74, 1.74, 0, c_white, global.ShipExtraAlpha)
    break;
    
    case 3:
    draw_sprite_ext(sprBallGlow, global.BallNumber, x, y, 1.60, 1.60, 0, global.Col03, 1)
    draw_sprite_ext(sprBallsCol02, global.BallNumber, x, y, 1.60, 1.60, 0, global.Col02, 1)
    draw_sprite_ext(sprBallsCol01, global.BallNumber, x, y, 1.60, 1.60, 0, global.Col01, 1)
    draw_sprite_ext(sprBallsColExtra, global.BallExtraNumber, x, y, 1.60, 1.60, 0, c_white, global.BallExtraAlpha)
    break;
    
    case 4:
    draw_sprite_ext(sprUFOCol03, global.UFONumber, x, y + 5, 1.74, 1.74, 0, c_white, 1)
    draw_sprite_ext(sprUFOGlow, global.UFONumber, x, y + 20, 1.74, 1.74, 0, global.Col03, 1)
    draw_sprite_ext(sprUFOCol02, global.UFONumber, x, y + 20, 1.74, 1.74, 0, global.Col02, 1)
    draw_sprite_ext(sprUFOCol01, global.UFONumber, x, y + 20, 1.74, 1.74, 0, global.Col01, 1)
    draw_sprite_ext(sprUFOColExtra, global.UFOExtraNumber, x, y + 20, 1.74, 1.74, 0, c_white, global.UFOExtraAlpha)
    break;
    
    case 5:
    draw_sprite_ext(sprWaveGlow, global.WaveNumber, x, y, 1.74, 1.74, 0, global.Col03, 1)
    draw_sprite_ext(sprWaveCol02, global.WaveNumber, x, y, 1.74, 1.74, 0, global.Col02, 1)
    draw_sprite_ext(sprWaveCol01, global.WaveNumber, x, y, 1.74, 1.74, 0, global.Col01, 1)
    draw_sprite_ext(sprWaveColExtra, global.WaveExtraNumber, x, y, 1.74, 1.74, 0, c_white, global.WaveExtraAlpha)
    break;
    
    case 6:
    draw_sprite_ext(sprSmasherColGlow_part1, global.SmasherNumber, x + SmasherXState, y + SmasherYState, (SmasherScaleXState), (SmasherScaleYState), (SmasherAngleState), global.Col03, 1);
    draw_sprite_ext(sprSmasherColGlow_part2, global.SmasherNumber, x + (SmasherXState02), y + (SmasherYState02), (SmasherScaleXState02), (SmasherScaleYState02), (SmasherAngleState02), global.Col03, 1);
    draw_sprite_ext(sprSmasherColGlow_part3, global.SmasherNumber, x + (SmasherXState03), y + (SmasherYState03), (SmasherScaleXState03), (SmasherScaleYState03), (SmasherAngleState03), global.Col03, 1);
    draw_sprite_ext(sprSmasherColGlow_part4, global.SmasherNumber, x + (SmasherXState04), y + (SmasherYState04), (SmasherScaleXState04), (SmasherScaleYState04), (SmasherAngleState04), global.Col03, 1);
    draw_sprite_ext(sprSmasherColGlow_part5, global.SmasherNumber, x + (SmasherXState05), y + (SmasherYState05), (SmasherScaleXState05), (SmasherScaleYState05), (SmasherAngleState05), global.Col03, 1);
    
    draw_sprite_ext(sprSmasherCol02_part3, global.SmasherNumber, x + SmasherXState03, y + SmasherYState03, (SmasherScaleXState03), (SmasherScaleYState03), (SmasherAngleState03), global.Col02, 1);
    draw_sprite_ext(sprSmasherCol01_part3, global.SmasherNumber, x + SmasherXState03, y + SmasherYState03, (SmasherScaleXState03), (SmasherScaleYState03), (SmasherAngleState03), global.Col01, 1);
    
    draw_sprite_ext(sprSmasherCol02_part5, global.SmasherNumber, x + (SmasherXState05), y + (SmasherYState05), (SmasherScaleXState05), (SmasherScaleYState05), (SmasherAngleState05), global.Col02, 1);
    draw_sprite_ext(sprSmasherCol02_part4, global.SmasherNumber, x + (SmasherXState04), y + (SmasherYState04), (SmasherScaleXState04), (SmasherScaleYState04), (SmasherAngleState04), global.Col02, 1); 
    draw_sprite_ext(sprSmasherCol01_part5, global.SmasherNumber, x + (SmasherXState05), y + (SmasherYState05), (SmasherScaleXState05), (SmasherScaleYState05), (SmasherAngleState05), global.Col01, 1);
    draw_sprite_ext(sprSmasherCol01_part4, global.SmasherNumber, x + (SmasherXState04), y + (SmasherYState04), (SmasherScaleXState04), (SmasherScaleYState04), (SmasherAngleState04), global.Col01, 1); 
    
    draw_sprite_ext(sprSmasherCol02_part1, global.SmasherNumber, x + SmasherXState, y + SmasherYState, (SmasherScaleXState), (SmasherScaleYState), (SmasherAngleState), global.Col02, 1);
    draw_sprite_ext(sprSmasherCol01_part1, global.SmasherNumber, x + SmasherXState, y + SmasherYState, (SmasherScaleXState), (SmasherScaleYState), (SmasherAngleState), global.Col01, 1);
    
    draw_sprite_ext(sprSmasherColExtra_part1, global.SmasherExtraNumber, x + SmasherXState, y + SmasherYState, (SmasherScaleXState), (SmasherScaleYState), (SmasherAngleState), c_white, global.SmasherExtraAlpha)
    draw_sprite_ext(sprSmasherCol02_part2, global.SmasherNumber, x + SmasherXState02, y + SmasherYState02, (SmasherScaleXState02), (SmasherScaleYState02), (SmasherAngleState02), global.Col02, 1);
    draw_sprite_ext(sprSmasherCol01_part2, global.SmasherNumber, x + SmasherXState02, y + SmasherYState02, (SmasherScaleXState02), (SmasherScaleYState02), (SmasherAngleState02), global.Col01, 1);
    break;
    
    case 7:
    draw_sprite_ext(sprSpiderGlow_part2_3, global.SpiderNumber, x + 25 + (SpiderXState04), y + 15 + (SpiderYState04), (SpiderScaleXState04), (SpiderScaleYState04), (SpiderAngleState04), global.Col03, 1)
    draw_sprite_ext(sprSpiderGlow_part2_2, global.SpiderNumber, x + 45 + (SpiderXState03), y + 15 + (SpiderYState03), (SpiderScaleXState03), (SpiderScaleYState03), (SpiderAngleState03), global.Col03, 1)
    draw_sprite_ext(sprSpiderGlow_part4, global.SpiderNumber, x - 20 + (SpiderXState05), y + 10 + (SpiderYState05), (SpiderScaleYState05), (SpiderScaleYState05), (SpiderAngleState05), global.Col03, 1)
    draw_sprite_ext(sprSpiderGlow_part1, global.SpiderNumber, x + (SpiderXState), y + (SpiderYState), (SpiderScaleXState), (SpiderScaleYState), (SpiderAngleState), global.Col03, 1)
    draw_sprite_ext(sprSpiderGlow_part3, global.SpiderNumber, x - 27 + (SpiderXState06), y + 19 + (SpiderYState06), (SpiderScaleXState06), (SpiderScaleYState06), (SpiderAngleState06), global.Col03, 1)
    draw_sprite_ext(sprSpiderGlow_part2, global.SpiderNumber, x + (SpiderXState02), y + 15 + (SpiderYState02), (SpiderScaleXState02), (SpiderScaleYState02), (SpiderAngleState02), global.Col03, 1)
    
    draw_sprite_ext(sprSpiderCol02_part2_3, global.SpiderNumber, x + (25 + (SpiderXState04) * image_xscale), y + 15 + (SpiderYState04), (SpiderScaleXState04), (SpiderScaleYState04), (SpiderAngleState04), global.Col02, 1)
    draw_sprite_ext(sprSpiderCol01_part2_3, global.SpiderNumber, x + (25 + (SpiderXState04) * image_xscale), y + 15 + (SpiderYState04), (SpiderScaleXState04), (SpiderScaleYState04), (SpiderAngleState04), global.Col01, 1)
    draw_sprite_ext(sprSpiderCol02_part2_2, global.SpiderNumber, x + (45 + (SpiderXState03) * image_xscale), y + 15 + (SpiderYState03), (SpiderScaleXState03), (SpiderScaleYState03), (SpiderAngleState03), global.Col02, 1)
    draw_sprite_ext(sprSpiderCol01_part2_2, global.SpiderNumber, x + (45 + (SpiderXState03) * image_xscale), y + 15 + (SpiderYState03), (SpiderScaleXState03), (SpiderScaleYState03), (SpiderAngleState03), global.Col01, 1)
    draw_sprite_ext(sprSpiderCol01_part4, global.SpiderNumber, x - 20 + (SpiderXState05), y + 10 + (SpiderYState05), (SpiderScaleYState05), (SpiderScaleYState05), (SpiderAngleState05), global.Col01, 1)
    draw_sprite_ext(sprSpiderCol02_part1, global.SpiderNumber, x + (SpiderXState), y + (SpiderYState), (SpiderScaleXState), (SpiderScaleYState), (SpiderAngleState), global.Col02, 1)
    draw_sprite_ext(sprSpiderCol01_part1, global.SpiderNumber, x + (SpiderXState), y + (SpiderYState), (SpiderScaleXState), (SpiderScaleYState), (SpiderAngleState), global.Col01, 1)
    draw_sprite_ext(sprSpiderCol02_part3, global.SpiderNumber, x - 27 + (SpiderXState06), y + 19 + (SpiderYState06), (SpiderScaleXState06), (SpiderScaleYState06), (SpiderAngleState06), global.Col02, 1)
    draw_sprite_ext(sprSpiderCol01_part3, global.SpiderNumber, x - 27 + (SpiderXState06), y + 19 + (SpiderYState06), (SpiderScaleXState06), (SpiderScaleYState06), (SpiderAngleState06), global.Col01, 1)
    draw_sprite_ext(sprSpiderColExtra, global.SpiderExtraNumber, x + (SpiderXState), y + (SpiderYState), (SpiderScaleXState), (SpiderScaleYState), (SpiderAngleState), c_white, global.SpiderExtraAlpha)
    draw_sprite_ext(sprSpiderCol02_part2, global.SpiderNumber, x + (SpiderXState02), y + 15 + (SpiderYState02), (SpiderScaleXState02), (SpiderScaleYState02), (SpiderAngleState02), global.Col02, 1)
    draw_sprite_ext(sprSpiderCol01_part2, global.SpiderNumber, x + (SpiderXState02), y + 15 + (SpiderYState02), (SpiderScaleXState02), (SpiderScaleYState02), (SpiderAngleState02), global.Col01, 1)
    break;
    
    case 8:
    draw_sprite_ext(sprSwingGlow, global.SwingNumber, x, y, 1.74, 1.74, 0, global.Col03, 1)
    draw_sprite_ext(sprSwingCol02, global.SwingNumber, x, y, 1.74, 1.74, 0, global.Col02, 1)
    draw_sprite_ext(sprSwingCol01, global.SwingNumber, x, y, 1.74, 1.74, 0, global.Col01, 1)
    draw_sprite_ext(sprSwingColExtra, global.SwingExtraNumber, x, y, 1.74, 1.74, 0, c_white, global.SwingExtraAlpha)
    break;
    
    case 9:
    draw_sprite_ext(sprArmadilloColGlow_part1, global.ArmadilloNumber, x + ArmadilloXState, y + ArmadilloYState, (ArmadilloScaleXState), (ArmadilloScaleYState), (ArmadilloAngleState), global.Col03, 1)
    draw_sprite_ext(sprArmadilloColGlow_part2, global.ArmadilloNumber, x + 48 + ArmadilloXState02, y + 23 + ArmadilloYState02, (ArmadilloScaleXState02), (ArmadilloScaleYState02), (ArmadilloAngleState02), global.Col03, 1)
    draw_sprite_ext(sprArmadilloColGlow_part3, global.ArmadilloNumber, x + 27 + ArmadilloXState03, y + 39 + ArmadilloYState03, (ArmadilloScaleXState03), (ArmadilloScaleYState03), (ArmadilloAngleState03), global.Col03, 1)
    draw_sprite_ext(sprArmadilloColGlow_part4, global.ArmadilloNumber, x + 10 + ArmadilloXState04, y + 39 + ArmadilloYState04, (ArmadilloScaleXState04), (ArmadilloScaleYState04), (ArmadilloAngleState04), global.Col03, 1)
    draw_sprite_ext(sprArmadilloColGlow_part5, global.ArmadilloNumber, x - 15 + ArmadilloXState05, y + 39 + ArmadilloYState05, (ArmadilloScaleXState05), (ArmadilloScaleYState05), (ArmadilloAngleState05), global.Col03, 1)
    draw_sprite_ext(sprArmadilloColGlow_part6, global.ArmadilloNumber, x - 34 + ArmadilloXState06, y + 39 + ArmadilloYState06, (ArmadilloScaleXState06), (ArmadilloScaleYState06), (ArmadilloAngleState06), global.Col03, 1)
    
    draw_sprite_ext(sprArmadilloCol01_part6, global.ArmadilloNumber, x - 34 + ArmadilloXState06, y + 39 + ArmadilloYState06, (ArmadilloScaleXState06), (ArmadilloScaleYState06), (ArmadilloAngleState06), global.Col01, 1)
    draw_sprite_ext(sprArmadilloCol01_part5, global.ArmadilloNumber, x - 15 + ArmadilloXState05, y + 39 + ArmadilloYState05, (ArmadilloScaleXState05), (ArmadilloScaleYState05), (ArmadilloAngleState05), global.Col01, 1)
    draw_sprite_ext(sprArmadilloCol01_part4, global.ArmadilloNumber, x + 8 + ArmadilloXState04, y + 39 + ArmadilloYState04, (ArmadilloScaleXState04), (ArmadilloScaleYState04), (ArmadilloAngleState04), global.Col01, 1)
    draw_sprite_ext(sprArmadilloCol01_part3, global.ArmadilloNumber, x + 27 + ArmadilloXState03, y + 39 + ArmadilloYState03, (ArmadilloScaleXState03), (ArmadilloScaleYState03), (ArmadilloAngleState03), global.Col01, 1)
    
    draw_sprite_ext(sprArmadilloCol02_part1, global.ArmadilloNumber, x + ArmadilloXState, y + ArmadilloYState, (ArmadilloScaleXState), (ArmadilloScaleYState), (ArmadilloAngleState), global.Col02, 1)
    draw_sprite_ext(sprArmadilloCol01_part1, global.ArmadilloNumber, x + ArmadilloXState, y + ArmadilloYState, (ArmadilloScaleXState), (ArmadilloScaleYState), (ArmadilloAngleState), global.Col01, 1)
    draw_sprite_ext(sprArmadilloCol02_part2, global.ArmadilloNumber, x + 48 + ArmadilloXState02, y + 23 + ArmadilloYState02, (ArmadilloScaleXState02), (ArmadilloScaleYState02), (ArmadilloAngleState02), global.Col02, 1)
    
    draw_sprite_ext(sprArmadilloColExtra_part1, global.ArmadilloExtraNumber, x + ArmadilloXState, y + ArmadilloYState, (ArmadilloScaleXState), (ArmadilloScaleYState), (ArmadilloAngleState), c_white, global.ArmadilloExtraAlpha)
    draw_sprite_ext(sprArmadilloCol01_part2, global.ArmadilloNumber, x + 48 + ArmadilloXState02, y + 23 + ArmadilloYState02, (ArmadilloScaleXState02), (ArmadilloScaleYState06), (ArmadilloAngleState02), global.Col01, 1)
    draw_sprite_ext(sprArmadilloColExtra_part2, global.ArmadilloExtraNumber, x + 48 + ArmadilloXState02, y + 23 + ArmadilloYState02, (ArmadilloScaleXState02), (ArmadilloScaleYState06), (ArmadilloAngleState02), c_white, global.ArmadilloExtraAlpha)
    break;
    
    case 10:
    draw_sprite_ext(sprJetPackGlow, global.JetPackNumber, x, y, 1.74, 1.74, 0, global.Col03, 1)
    draw_sprite_ext(sprJetPackCol02, global.JetPackNumber, x, y, 1.74, 1.74, 0, global.Col02, 1)
    draw_sprite_ext(sprJetPackCol01, global.JetPackNumber, x, y, 1.74, 1.74, 0, global.Col01, 1)
    //draw_sprite_ext(sprJetPackColExtra, global.SwingExtraNumber, x, y, 1.74, 1.74, 0, c_white, global.SwingExtraAlpha)
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
